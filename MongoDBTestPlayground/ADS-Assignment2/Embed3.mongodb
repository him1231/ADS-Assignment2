////Data Modelling

// Select the database to use.
use('ADS-Assignment2');

// The drop() command destroys all data from a collection.
db.Embedding3.drop();

// Insert a few documents into the sales collection.
db.Embedding3.insertMany(
  [
    {
      _id:1,
      Departments:[
        {
          "DeptID": "CS",
          "DeptName": "Computer Science",
          "Location": "Green Zone",
          Courses: [
            {
              "CourseID": "CS101",
              "Title": "Introduction to Data Science",
              "Level": 6,
              Offers: [
                {
                  "Year": 2020,
                  "ClassSize": 40,
                  "AvailablePlaces": 38,
                  Enrolled:[
                    {
                      "StudentID": "15101010",
                      "Year": 2016,
                      "EnrolDate": "15/05/2021",
                      Student:{
                        "StuName": "Chan Tai Man",
                        "DOB": "10/08/2001"
                      }
                    },
                    {
                      "StudentID": "16101011",
                      "Year": 2017,
                      "EnrolDate": "16/05/2021",
                      Student:{
                        "StuName": "Wong Tai Man",
                        "DOB": "09/07/2002"
                      }
                    },
                    {
                      "StudentID": "15111111",
                      "Year": 2016,
                      "EnrolDate": "16/05/2021",
                      Student:{
                        "StuName": "Cheung Tai Man",
                        "DOB": "09/07/2002"
                      }
                    }
                  ]
                },
                {
                  "Year": 2021,
                  "ClassSize": 40,
                  "AvailablePlaces": 40,
                  Enrolled:[
                    {
                      "StudentID": "15101010",
                      "Year": 2016,
                      "EnrolDate": "15/05/2021",
                      Student:{
                        "StuName": "Chan Tai Man",
                        "DOB": "10/08/2001"
                      }
                    },
                  ]
                }
              ]
            },
            {
              "CourseID": "CS102",
              "Title": "Introduction to Data Science2",
              "Level": 6,
              Offers: [
                {
                  "Year": 2020,
                  "ClassSize": 40,
                  "AvailablePlaces": 39,
                  Enrolled:[
                    {
                      "StudentID": "15202020",
                      "Year": 2016,
                      "EnrolDate": "15/05/2021",
                      Student:{
                        "StuName": "Lee Tai Man",
                        "DOB": "10/08/2001"
                      }
                    }
                  ]
                },
                {
                  "Year": 2021,
                  "ClassSize": 40,
                  "AvailablePlaces": 40,
                  Enrolled:[]
                }
              ]
            },
            {
              "CourseID": "CS103",
              "Title": "Mathematical Foundations of Computing",
              "Level": 6,
              Offers: [
                {
                  "Year": 2021,
                  "ClassSize": 40,
                  "AvailablePlaces": 39,
                  Enrolled:[
                    {
                      "StudentID": "15101010",
                      "Year": 2016,
                      "EnrolDate": "15/05/2021",
                      Student:{
                        "StuName": "Chan Tai Man",
                        "DOB": "10/08/2001"
                      }
                    },
                  ]
                }
              ]
            }
          ]
        },
        {
          "DeptID": "IS",
          "DeptName": "Information Systems",
          "Location": "Red Zone",
          Courses: [
            {
              "CourseID": "IS101",
              "Title": "Introduction to Information Systems",
              "Level": 6,
              Offers: [
                {
                  "Year": 2020,
                  "ClassSize": 40,
                  "AvailablePlaces": 40,
                  Enrolled:[]
                },
                {
                  "Year": 2021,
                  "ClassSize": 40,
                  "AvailablePlaces": 40,
                  Enrolled:[]
                }
              ]
            }
          ]
        },
        {
          "DeptID": "VS",
          "DeptName": "Visual Studies",
          "Location": "Blue Zone",
          Courses: [
            {
              "CourseID": "VS101",
              "Title": "Introduction to Visual Studies",
              "Level": 6,
              Offers: [
                {
                  "Year": 2020,
                  "ClassSize": 40,
                  "AvailablePlaces": 40,
                  Enrolled:[]
                },
                {
                  "Year": 2021,
                  "ClassSize": 40,
                  "AvailablePlaces": 40,
                  Enrolled:[]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
);

//// Implementation of a NoSQL Database Application

// insertion, update and deletion operations
use('ADS-Assignment2');

// Departments

const DeptID = 'DeptID';
const DeptName = 'DeptName';
const DeptLocation = 'Location';

const Department = {
  'DeptID': DeptID,
  'DeptName': DeptName,
  'Location': DeptLocation,
}

db.Embedding3.update(
  { '_id': 1 }, 
  { $push: DeptLocation }
  }
)
//You can also use the $addToSet to avoid duplicate address in the array.


//findAndModify

// Courses
// Offer
// Enrolled
// Students


////Query Functions Implementation

// Ass Query 1: Find the titles of courses offered by the CS departnebt in 2021
use('ADS-Assignment2');
db.Embedding3.aggregate(
  [
    {$unwind:'$Departments'},
    {$unwind:'$Departments.Courses'},
    {$unwind:'$Departments.Courses.Offers'},
    {$match:{'Departments.DeptID':'CS', 'Departments.Courses.Offers.Year':2021}},
    {$project:{result:'$Departments.Courses.Title'}},
    {$group:{_id:'Find the titles of courses offered by the CS departnebt in 2021',result:{$addToSet:'$result'}}},
  ]
)

// Ass Query 2: List the information of courses offered by the CS or IS depqrtments in 2021
use('ADS-Assignment2');
db.Embedding3.aggregate(
  [
    {$unwind:'$Departments'},
    {$unwind:'$Departments.Courses'},
    {$unwind:'$Departments.Courses.Offers'},
    {$match: {$or: [ {'Departments.DeptID': 'IS'}, {'Departments.DeptID': 'CS'} ], "Departments.Courses.Offers.Year": 2021}},
    {$project:{result:'$Departments.Courses'}},
    {$group:{_id:'List the information of courses offered by the CS or IS depqrtments in 2021',result:{$addToSet:'$result'}}},
    {$unset:'result.Offers'}
  ]
)

// Ass Query 3: Find the information of the course which is the most popular course enrolled by students.
use('ADS-Assignment2');
db.Embedding3.aggregate(
  [
    {$unwind:'$Departments'},
    {$unwind:'$Departments.Courses'},
    {$unwind:'$Departments.Courses.Offers'},
    {$project:{Course:"$Departments.Courses", count:{$size:"$Departments.Courses.Offers.Enrolled"}}},
    {$unset:'Course.Offers'},
    {$group:{_id:"$Course",count:{$sum:"$count"}}},
    {$sort: { "count": -1 }},
    {$limit: 1 },
    {$project:{_id:'Find the information of the course which is the most popular course enrolled by students.',result:{Course:"$_id"}}},
  ]
)

// Ass Query 4: List the numbers of students for each course, who have enrolled the course offered by the CS department in 2021.
use('ADS-Assignment2');
db.Embedding3.aggregate(
  [
    {$unwind:'$Departments'},
    {$unwind:'$Departments.Courses'},
    {$unwind:'$Departments.Courses.Offers'},
    {$match: {'Departments.DeptID': 'CS', "Departments.Courses.Offers.Year": 2021}},
    {$project: {result: { CourseID: "$Departments.Courses.CourseID", count: { $size: "$Departments.Courses.Offers.Enrolled" }}}},
    {$group:{_id:'List the numbers of students for each course, who have enrolled the course offered by the CS department in 2021',result:{$addToSet:'$result'}}},
  ]
)

// Ass Query 5: List the courses offered by the CS department that the student Chan Tai Man has enrolled in 2021.
use('ADS-Assignment2');
db.Embedding3.aggregate(
  [
    {$unwind:'$Departments'},
    {$unwind:'$Departments.Courses'},
    {$unwind:'$Departments.Courses.Offers'},
    {$unwind:'$Departments.Courses.Offers.Enrolled'},
    {$match: {'Departments.DeptID': 'CS',"Departments.Courses.Offers.Enrolled.Student.StuName": "Chan Tai Man", "Departments.Courses.Offers.Year": 2021}},
    {$project: {result: "$Departments.Courses.CourseID"}},
    {$group:{_id:'List the courses offered by the CS department that the student Chan Tai Man has enrolled in 2021',result:{$addToSet:'$result'}}},
  ]
)

use('ADS-Assignment2-DB1');
db.Departments.aggregate(
  [
    { $unwind: "$Courses" },
    {
      $lookup: {
        from: "Students",
        localField: "Courses.Offer.Enrolled.StudentID",
        foreignField: "StudentID",
        as: "Students",
      },
    },
    {$match: {'DeptID': 'CS',"Students.StuName": "Chan Tai Man", "Courses.Offer.Year": 2021}},
    { $project: { result: "$Courses.CourseID" } },
    {
      $group: {
        _id: 'List the courses',
        result: { $addToSet: "$result" },
      },
    },
  ]
)
